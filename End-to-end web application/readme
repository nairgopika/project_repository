End to end web application deployment

Steps:

1. Create a RDS instance 
	Standard Create
	create a rds instance of MySQl type
	Templates - Free Tier
	Credentials (keep the same user name and password):
	user - admin & password - password
	storage capacity - 20 GB
	Disable auto storage scaling
	Connectivity - Dont Connect to EC2
	Network type - IPv4
	VPC - default VPC
	public access - Yes 
	create a new security group 
	Availiability zone - us-east-1a
	Database authentication 
	Password authentication
	Monitoring
	Disable - Enhanced monitoring
	Additional Configuration 
	Disble automated backup
	create the database


2. Create a normal ec2 instance with amazon linux; allow ports http and ssh in security group
	2.a - Select Ec2 --> Actions -> Networking -> Connect to RDS --> Database Role -> Instance -> Select Instance and save.

3. On the ec2 instance, run the following commands:
	a.Connect to the EC2 instance using the AWS Connect option via instance connect using the "root" user , not the normal ec2-user
	b. wget https://raw.githubusercontent.com/gaurav157243/aws-project/master/springboot-backend/springboot-backend.jar
	c. yum -y install java-1.8.0
	d. create a file with the following details 

// create the application.properties with the following content:
vi application.properties
press i key
(paste the below lines in the application properties file)
_
_
# temp file:
	server.port=80
	spring.datasource.url=jdbc:mysql://<specify your database endpoint>:3306/test?createDatabaseIfNotExist=true
	spring.datasource.username=admin
	spring.datasource.password=password
	spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
	hibernate.dialect.storage_engine=innodb
	spring.jpa.database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
	spring.jpa.hibernate.ddl-auto=update

--- copy content end --- 

press esc key
press :wq


	e. run the java application using the following commands:

		java -jar springboot-backend.jar 

	the application by default will run on port 80
	If there is no error while running the application, then
	f. stop the application by pressing Ctrl c
	g. run the below command (this will prevent the application to stop if the ssh session is terminated)
		nohup java -jar springboot-backend.jar 

	h. Verify that the application is configured correctly by using the following url in the chrome tab:
		http://<ec-ip-address>/api/v1/employees (use the public ec-ip address)

You should see [] as the response in the browser tab

	4. Create a load balancer and register the ec2 instance with the load balancer. 
	a.Allow mapping for all AZs. and In SG, allow all ports
	b.Create a Target Group; while registering the EC2 instance, use port 80
	c.The ec2 instance should come to healthy state

	5. Verify that the load balancer is working correctly by using the following from your browser tab:
		http://<alb dns name>/api/v1/employees
		You should see [] as the response in the browser tab

	6. Create a new s3 bucket and make the following changes:
	a. make the bucket public by the policy, change the bucket name

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": "*",
            "Action": "s3:GetObject",
            "Resource": "arn:aws:s3:::<bucket-name>/*"
        }
    ]
}

b. Block public access (bucket settings) - set it to OFF
c. download the following file by clicking on the link - https://github.com/nairgopika/project_repository/blob/main/End-to-end%20web/angular.zip
d.unzip the angular.zip file 
e.modify the "main" file and replace the load balancer name to your load balancer 
f.search for api/v1/employees and then repalce alb only

The line should finally look like this:
 this.baseURL = "http://prj-alb-1398592271.us-east-1.elb.amazonaws.com/api/v1/employees";
upload the entire folder contents (not the folder) to the s3 bucket.
enable the Static site hosting option  - set the index to index.html file 
Now access the application using the static website url and try to add the employee details.




